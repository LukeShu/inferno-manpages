.TH MISC-DEVPOINTER 3 "" "" "Inferno Reference "
.PP
.SH NAME
devpointer \- I/O interface for the pointer device
.PP
.SH SYNOPSIS
.IP
.EX
include \[dq]draw.m\[dq];   #for Draw\->Pointer
include \[dq]devpointer.m\[dq];
ptr:= load Devpointer Devpointer\->PATH;
Devpointer: module
{
  PATH:      con \[dq]/dis/lib/devpointer.dis\[dq];
   Size:      con 1+3*12;   # \[aq]m\[aq] plus 3 12\-byte decimal integers
   init:        fn(file: string, posn: chan of ref Draw\->Pointer): int;
  bytes2ptr: fn(buf: array of byte)    : ref Draw\->Pointer;
  ptr2bytes: fn(ptr: ref Draw\->Pointer): array of byte;
};
.EE
.PP
.SH DESCRIPTION
.SS INIT (FILE, POSN)
The init function spawns a thread to continually read the pointer device specified by 
.I file
and return a Pointer adt (see 
.I pointer
) over the channel specified by 
.I posn
.
If 
.I file
is nil, the default device is /dev/pointer.
.PP
.SS BYTES2PTR (BUF)
The bytes2ptr function converts the array of characters in 
.I buf
to a Pointer and returns a reference to it.
The 
.I buf
array should consist of exactly Size bytes and be in the format returned by /dev/pointer.
.PP
.SS PTR2BYTES (PTR)
The ptr2bytes function provides an inverse transformation of the bytes2ptr function.
.PP
.SH FILES
/dev/pointer
.PP
.SH SEE ALSO
.I pointer
and 
.I draw
