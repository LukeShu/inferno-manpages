.TH MISC-LOGIN 3 "" "" "Inferno Reference "
.PP
.SH NAME
Login \- introduction to the Login module
.PP
.SH SYNOPSIS
.IP
.EX
include \[dq]security.m\[dq];
login:= load Login Login\->PATH;
.EE
.PP
.SH DESCRIPTION
The login module provides routines to communicate with a Certifying Authority (CA) in order to create a Keyring\->Authinfo adt.
(See 
.I Limbo Keyring Modules
).
It does this assuming a secret, a password, has already been established between the user and the CA.
.PP
The password is used by the encrypted key exchange protocol defined below to establish a secure channel between the user and CA.
The description uses the following notation:
.PP
.TS
tab(@);
l l.
T{
ivec
T}@T{
an 8 \- byte random number chosen for this conversation
T}
T{
sha
T}@T{
the 20 \- byte secure hash (SHA\-1) of the password
T}
T{
key
T}@T{
an 8 \- byte secret formed as follows:
T}
T{
T}@T{
key[0] = ivec[0]\[ha]sha[0]\[ha]sha[8]\[ha]sha[16]
T}
T{
T}@T{
key[1] = ivec[1]\[ha]sha[1]\[ha]sha[9]\[ha]sha[17]
T}
T{
T}@T{
&...
T}
T{
T}@T{
key[5] = ivec[5]\[ha]sha[5]\[ha]sha[13];
T}
T{
T}@T{
key[6] = ivec[6]\[ha]sha[6]\[ha]sha[14];
T}
T{
T}@T{
key[7] = ivec[7]\[ha]sha[7]\[ha]sha[15];
T}
T{
alpha
T}@T{
a Diffie\-Hellman base used system wide
T}
T{
p
T}@T{
a Diffie\-Hellman modulus used system wide
T}
T{
key (
.I m
)
T}@T{

.I m
encrypted using the RC4 algorithm with key
T}
T{
Rx
T}@T{
a random number of the same order as p.
T}
T{
secret
T}@T{
the Diffie\-Hellman secret alpha**(r0*r1) mod p
T}
.TE
.PP
.TS
tab(@);
l.
T{
T}
.TE
.PP
In the following protocol, the notation \[dq]user\->CA 
.I xxx
\[dq] means that a user sends the message \[dq]
.I xxx
\[dq] to the certifying authority.
At any point in the exchange, either party can send an error instead of a message to terminate the protocol.
.IP
.EX
  user \-\-> CA  name   
 CA \-\-> user  ACK
     
 user \-\-> CA  ivec   
 CA \-\-> user  key(alpha**r0 mod p), alpha, p

   user \-\-> CA  alpha**r1 mod p
 CA \-\-> user  CA\[aq]s public key, SHA(CA\[aq]s public key + secret)
 
 user \-\->CA  user\[aq]s public key, SHA(user\[aq]s public key + secret)
 CA \-\-> user  user\[aq]s public key certificate
.EE
.PP
The complexity of this protocol is intended to shield the password.
To start a clear text attack against the password, one needs to first attack the Diffie\-Hellman exponential to determine alpha**r0 mod p.
A possible weakness is that the encrypted quantity is base 64 encoded, constraining the possible values of each byte.
This could aid a brute force attack.
.PP
The values alpha and p are sent unprotected, though the user code does a few sanity checks on the values it receives.
This is another potential point of attack.
.PP
The role of ivec is to foil any replay attacks by someone spoofing the CA, though this is probably overkill.
.PP
.SH SEE ALSO
B. Schneier, 
.I Applied Cryptography
, 1996, J. Wiley & Sons, Inc.
