.TH STAT 3 "" "" "Inferno Communications Protocol, Styx"
.PP
.SH NAME
stat, wstat \- inquire or change file attributes
.SH SYNOPSYS
.IP
.EX
Tstat  tag [2] fid [2]
Rstat  tag [2] fid [2] stat [116]
Twstat tag [2] fid [2] stat [116]
Rwstat tag [2] fid [2]
.EE
.PP
.SH DESCRIPTION
.SS THE STAT TRANSACTION
The 
.I stat
transaction inquires about the file identified by 
.I fid
.
The reply includes (in the 
.I stat
argument) a 
.I directory entry
containing the file\[aq]s attributes.
.PP
The 
.I stat
request requires no special permissions other than those needed to acquire 
.I fid
.
.PP
.SS DIRECTORY ENTRY LAYOUT
Both the 
.I stat
and 
.I wstat
messages transmit file attributes in a machine\-independent representation called a 
.I directory entry
.
.PP
A directory entry is 116\-bytes long.
See 
.I DIRLEN
in 
.I <lib9.h>
.
Integers in this encoding are in little\-endian order (least significant byte first).
The 
.I convM2D
and 
.I convD2M
routines (see ) convert between directory entries and C language structures.
.PP
This encoding may be turned into a machine dependent 
.I Dir
structure using routines defined in 
.I styx
.(see 
.I lib9.h
)
.PP
A 
.I directory entry
is laid out as follows:
.PP
.TS
tab(@);
lw(35.0n) lw(35.0n).
T{
name [28]
T}@T{
File name.
If the file is the root directory of the server the name must be 
.I /
.
T}
T{
uid [28]
T}@T{
Owner name
T}
T{
gid [28]
T}@T{
Group name
T}
T{
qid.path [4]
T}@T{
File server\[aq]s identification for the file.
See
.IR 0intro (3)
&.
T}
T{
qid.vers [4]
T}@T{
Version number for given path.
See
.IR 0intro (3)
&.
T}
T{
mode [4]
T}@T{
Permissions and flags.
The 
.I mode
contains permission bits as described in
.IR 0intro (2)
and 16r80000000 if this file is a directory.
T}
T{
atime [4]
T}@T{
The last access time.
The 
.I atime
field records the last read of the contents; it is also set whenever 
.I mtime
is set.
.PP
For a directory, 
.I atime
is set by an 
.I attach
, 
.I walk
, or 
.I create
, all whether successful or not.
.PP
The value is measured in seconds since the epoch (Jan 1 00:00 1970 GMT).
T}
T{
mtime [4]
T}@T{
The last modification time.
The 
.I mtime
field reflects the time of the last change of content.
.PP
For a plain file, 
.I mtime
is the time of the most recent 
.I create
, open with truncation, or 
.I write
; for a directory it is the time of the most recent 
.I remove
, 
.I create,
or 
.I wstat
of a file in the directory.
.PP
The value is measured in seconds since the epoch
.PP
(Jan 1 00:00 1970 GMT).
T}
T{
length [8]
T}@T{
Length of file in bytes.
Directories and most files representing devices have, by convention, a length of 0.
T}
T{
type [2]
T}@T{
The 
.I device type
for the file, a single character representing the root of a file tree implemented by a particular kernel device driver.
T}
T{
dev [2]
T}@T{
See discussion of 
.I dev
in
.IR 0intro (3)
&.
T}
.TE
.PP
.TS
tab(@);
l.
T{
T}
.TE
.PP
A 
.I read
of a directory yields an integral number of directory entries in the machine independent encoding given above (see
.IR read (3)
).
.PP
.SS THE WSTAT TRANSACTION
The 
.I wstat
request can change certain file attributes.
.PP
.TS
tab(@);
l l.
T{
name
T}@T{
The 
.I name
can be changed by anyone with write permission in the parent directory.
It is an error to change the name of a file to that of an existing file.
T}
T{
mode and mtime
T}@T{
The 
.I mode
and 
.I mtime
can be changed by the owner of the file.
The directory bit cannot be changed by a 
.I wstat
.
All the other defined permission and mode bits can be change.
T}
T{
gid
T}@T{
The 
.I gid
can be changed: by the owner if also a member of the new group.
(See
.IR 0intro (3)
for more information about permissions and 
.I users
for users and groups).
T}
.TE
.PP
.TS
tab(@);
l.
T{
T}
.TE
.PP
None of the other attributes can be altered by a 
.I wstat
.
In particular, there is no way to change the owner of a file.
.PP
.SH ENTRY POINTS
Type 
.I stat
messages are generated by the 
.B fstat
and 
.B stat
calls (see
.IR stat (8)
).
.PP
.SH SEE ALSO
